---


- name: Fail if container already exists
  ansible.builtin.fail:
    msg: "The container {{ vmid }}-{{ hostname }} already exists! Set delete_existing=true to remove the container before installing."
  when: lxc_exists


# - name: Set static IP config if gateway is specified
#   set_fact:
#     netif_config: "name={{ net.name }},bridge={{ net.bridge }},ip={{ net.ip }},gw={{ net.gw }}"
#   when: net.gw != ""

# - name: Set DHCP IP config if gateway is not defined
#   set_fact:
#     netif_config: "name={{ net.name }},bridge={{ net.bridge }},ip={{ net.ip }}"
#   when: net.gw == ""


- name: Install LXC
  community.general.proxmox:
    api_host: "{{ proxmox_host }}"
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_password }}"
    node: '{{ proxmox_node }}'
    vmid: '{{ vmid }}'
    hostname: '{{ hostname }}'
    password: '{{ root_password }}'
    ostype: '{{ os_type }}'
    ostemplate: '{{ os_template }}'
    cores: '{{ cores }}'
    memory: '{{ memory }}'
    swap: '{{ swap }}'
    netif:
      net0: "name={{ net.name }},bridge={{ net.bridge }},ip={{ net.ip }}{{ ',gw=' + net.gw if net.gw else '' }}{{ ',hwaddr='+ net.mac_address if net.mac_address else '' }}"
    nameserver: '{{ dns_server | default(omit) }}'  # skip parameter if dns_server is not set
    onboot: '{{ start_on_boot }}'
    timezone: '{{ timezone }}'
    unprivileged: '{{ unprivileged }}'
    features:
      - "nesting={{ nesting }}"
      - "keyctl={{ keyctl }}"

    
    # rootfs volume
    disk_volume:
      storage: '{{ rootfs_storage}}'
      size: '{{ rootfs_size}}'

    state: present
  delegate_to: localhost  # must run on localhost since proxmox api is used, not ssh