---
- name: Configure Openmediavault Server
  hosts: omv1
  gather_facts: true
  vars_files:
    - host_vars/omv1/secrets.yml
  become: true

  tasks:
    - name: Upgrade packages using the omv wrapper script
      ansible.builtin.command: "/usr/sbin/omv-upgrade"

    - name: Upload SSH public key
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        state: present
        # key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}" # lookup key file in home dir of current user
        key: "{{ lookup('file', hostvars['localhost'].ssh_pub_key_path) }}"
        exclusive: yes  # remove all other non-specified keys from the authorized_keys file
      notify: 
        - restart sshd

    - name: Configure root SSH access
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin {{ sshd_permit_root_login }}"
        state: present
      notify: 
        - restart sshd

    - name: Configure SSH password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication {{ sshd_password_authentication }}"
        state: present
      notify: 
        - restart sshd

    - name: Enable passwordless sudo
      copy:
        dest: "/etc/sudoers.d/{{ ansible_user }}"
        content: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: 0440
        validate: /usr/sbin/visudo -csf %s
      notify: 
        - restart sshd

    - name: Add the new admin user to the openmediavault-admin group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: openmediavault-admin 
        append: yes
      notify: 
        - restart sshd  

    - name: Remove the default admin user from the openmediavault-admin group
      ansible.builtin.command: "gpasswd -d admin openmediavault-admin"
      register: command_result
      changed_when: "not 'is not a member of' in command_result.stderr"
      failed_when: false
      notify: 
        - reboot server 

  handlers:
  - name: restart sshd
    ansible.builtin.service: 
      name: sshd 
      state: restarted

  - name: reboot server
    ansible.builtin.reboot:
      reboot_command: systemctl reboot -i
  