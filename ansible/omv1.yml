---
- name: Configure Server
  hosts: omv1
  gather_facts: true
  vars_files:
    - host_vars/omv1/packages.yml
    - host_vars/omv1/secrets.yml
  become: true

  pre_tasks:
    - name: Upgrade packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes
 

    - name: Upload SSH public key
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        state: present
        # key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}" # lookup key file in home dir of current user
        key: "{{ lookup('file', hostvars['localhost'].ssh_pub_key_path) }}"
        exclusive: yes  # remove all other non-specified keys from the authorized_keys file
      notify: 
        - restart sshd

    - name: Configure root SSH access
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin {{ sshd_permit_root_login }}"
        state: present
      notify: 
        - restart sshd

    - name: Configure SSH password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication {{ sshd_password_authentication }}"
        state: present
      notify: 
        - restart sshd

    - name: Enable passwordless sudo
      copy:
        dest: "/etc/sudoers.d/{{ ansible_user }}"
        content: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: 0440
        validate: /usr/sbin/visudo -csf %s
      notify: 
        - restart sshd

  roles:
    - role: install_omv


  post_tasks:
    - name: Add the user to the _ssh group  # omv installation disables ssh for other users/groups
      ansible.builtin.user:
        name: "{{ bs_new_user }}"
        groups: _ssh
        append: yes

    - name: reboot server
      ansible.builtin.reboot:
        reboot_command: systemctl reboot -i


  handlers:
  - name: restart sshd
    ansible.builtin.service: 
      name: sshd 
      state: restarted
  